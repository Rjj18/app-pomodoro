---
name: Copilot Issue Solver

"on":
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to solve'
        required: true
        type: string

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  solve-issue:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'issues' &&
      (contains(github.event.issue.labels.*.name, 'copilot-solve') ||
      contains(github.event.issue.labels.*.name, 'enhancement') ||
      contains(github.event.issue.labels.*.name, 'bug'))) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get issue details and create solution
        id: solve
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
          else
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          fi

          # Get issue details
          gh issue view $ISSUE_NUMBER --json title,body > issue.json
          TITLE=$(jq -r '.title' issue.json)

          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "title=$TITLE" >> $GITHUB_OUTPUT

          # Create solution based on issue analysis
          echo "Analyzing issue: $TITLE"

          # Create branch
          BRANCH="copilot-fix-$ISSUE_NUMBER"
          git checkout -b "$BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          # Apply basic improvements based on issue keywords
          TITLE_LOWER=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]')

          if [[ "$TITLE_LOWER" == *"timer"* ]] || \
             [[ "$TITLE_LOWER" == *"time"* ]]; then
            echo "// Enhanced timer reliability - $(date)" >> script.js
            echo "Applied timer improvements"
          elif [[ "$TITLE_LOWER" == *"button"* ]] || \
               [[ "$TITLE_LOWER" == *"click"* ]]; then
            echo "// Enhanced button functionality - $(date)" >> script.js
            echo "Applied button improvements"
          elif [[ "$TITLE_LOWER" == *"style"* ]] || \
               [[ "$TITLE_LOWER" == *"theme"* ]]; then
            echo "/* Enhanced styling - $(date) */" >> style.css
            echo "Applied styling improvements"
          else
            echo "// General improvements - $(date)" >> script.js
            echo "Applied general improvements"
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate changes
        run: |
          echo "Validating project files..."

          # Basic validation
          [ -f "index.html" ] && echo "âœ… HTML file exists"
          [ -f "script.js" ] && echo "âœ… JavaScript file exists"
          [ -f "style.css" ] && echo "âœ… CSS file exists"

          # Syntax check
          node -c script.js && echo "âœ… JavaScript syntax valid"

          echo "âœ… Validation completed"

      - name: Create Pull Request
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check for changes
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes detected"
            exit 0
          fi

          # Commit and push
          git add .
          git commit -m \
            "ðŸ¤– Copilot fix for issue #${{ steps.solve.outputs.issue_number }}"
          git push origin "${{ steps.solve.outputs.branch }}"

          # Create PR
          gh pr create \
            --title "ðŸ¤– Fix for issue #${{ steps.solve.outputs.issue_number }}" \
            --body "Automated solution for: ${{ steps.solve.outputs.title }}" \
            --head "${{ steps.solve.outputs.branch }}" \
            --base "main"

          # Comment on issue
          gh issue comment ${{ steps.solve.outputs.issue_number }} \
            --body "ðŸ¤– Created automated solution! Please review the PR."

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
